<jittershader name="lumasker">
	<description>
	Blur
	</description>
	<param name="tex0" type="int" default="0" />
  <param name="tex1" type="int" default="1" />
  <param name="tex2" type="int" default="2" />
	<language name="glsl" version="1.0">
		<bind param="tex0" program="fp" />
    <bind param="tex1" program="fp" />
    <bind param="tex2" program="fp" />
    <program name="vp" type="vertex">
<![CDATA[
varying vec2 texcoord0;
varying vec2 texcoord1;
varying vec2 texcoord2;
varying vec2 texdim0;
varying vec2 texdim1;
varying vec2 texdim2;
varying vec2 texorient0;
varying vec2 texorient1;
varying vec2 texorient2;

void main() {
  // perform standard transform on vertex
  gl_Position = ftransform();

  // transform texcoords
  texcoord0 = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
  texcoord1 = vec2(gl_TextureMatrix[1] * gl_MultiTexCoord1);
  texcoord2 = vec2(gl_TextureMatrix[2] * gl_MultiTexCoord2);
  // extract the x and y scalars from the texture matrix to determine dimensions
  texdim0 = vec2 (abs(gl_TextureMatrix[0][0][0]),abs(gl_TextureMatrix[0][1][1]));
  texdim1 = vec2 (abs(gl_TextureMatrix[1][0][0]),abs(gl_TextureMatrix[1][1][1]));
  texdim2 = vec2 (abs(gl_TextureMatrix[2][0][0]),abs(gl_TextureMatrix[2][1][1]));
  // extract the sign for orientation
  texorient0 = vec2 (gl_TextureMatrix[0][0][0]/texdim0.x,gl_TextureMatrix[0][1][1]/texdim0.y);
  texorient1 = vec2 (gl_TextureMatrix[1][0][0]/texdim1.x,gl_TextureMatrix[1][1][1]/texdim1.y);
  texorient2 = vec2 (gl_TextureMatrix[2][0][0]/texdim2.x,gl_TextureMatrix[2][1][1]/texdim2.y);
}
]]>
    </program>
		<program name="fp" type="fragment">
<![CDATA[

varying vec2 texcoord0;
varying vec2 texcoord1;
varying vec2 texcoord2;
varying vec2 texdim0;
varying vec2 texdim1;
varying vec2 texdim2;

uniform sampler2DRect tex0;
uniform sampler2DRect tex1; // noise
uniform sampler2DRect tex2; // water

void main () {
  vec4 noiseTex = texture2DRect(tex1, texcoord0);
  vec4 waterTex = texture2DRect(tex2, texcoord0);
  float scroll = (waterTex.r * noiseTex.b * - 1.0) * 0.8;
  vec4 texColor0 = texture2DRect(tex0, texcoord0 + vec2(0.0, scroll));
  vec4 texColor1 = texture2DRect(tex0, texcoord0 + vec2(-1.0, 0.5 + scroll));
  vec4 texColor2 = texture2DRect(tex0, texcoord0 + vec2(-0.5, -1.0 + scroll));
  vec4 texColor3 = texture2DRect(tex0, texcoord0 + vec2(1.0, -0.5 + scroll));
  vec4 texColor4 = texture2DRect(tex0, texcoord0 + vec2(0.5, 1.0 + scroll));

  vec4 ave = (texColor1 + texColor2 + texColor3 + texColor4) / 4.0;
  vec4 mixCol = mix(texColor0, ave, min(0.8, waterTex.r *3.0));
  mixCol = min(vec4(1.0), mixCol + vec4(0.004));

  vec4 outCol = min(mixCol, texColor0);

  gl_FragColor = outCol;
}
]]>
		</program>
	</language>
</jittershader>
