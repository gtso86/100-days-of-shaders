<jittershader name="lumasker">
	<description>
	Water bleeding
	</description>
	<param name="tex0" type="int" default="0" />
  <param name="tex1" type="int" default="1" />
	<language name="glsl" version="1.0">
		<bind param="tex0" program="fp" />
    <bind param="tex1" program="fp" />
    <program name="vp" type="vertex" source="sh.passthrudim.vp.glsl" />
		<program name="fp" type="fragment">
<![CDATA[

varying vec2 texcoord0;
varying vec2 texcoord1;
varying vec2 texdim0;
varying vec2 texdim1;

uniform sampler2DRect tex0;
uniform sampler2DRect tex1; // noise

void main () {
  vec4 noiseTex = texture2DRect(tex1, texcoord0);

  float scroll = -0.0;
  vec4 texColor0 = texture2DRect(tex0, texcoord0 + vec2(0.0, scroll));
  vec2 bleedVec = -(noiseTex.xy - 0.5) * 1.0;
  vec4 texColor1 = texture2DRect(tex0, texcoord0 + vec2(-1.0, 0.5 + scroll));
  vec4 texColor2 = texture2DRect(tex0, texcoord0 + vec2(-0.5, -1.0 + scroll));
  vec4 texColor3 = texture2DRect(tex0, texcoord0 + vec2(1.0, -0.5 + scroll));
  vec4 texColor4 = texture2DRect(tex0, texcoord0 + vec2(0.5, 1.0 + scroll));

  vec4 texOut = texture2DRect(tex0, texcoord0 + bleedVec); // out
  vec4 texIn = texture2DRect(tex0, texcoord0 - bleedVec); // in

  float minFl = min(min(min(texColor1.r, texColor2.r), texColor3.r), texColor4.r);

  //blur
  float aveFl = (texColor0.r + texColor1.r + texColor2.r + texColor3.r + texColor4.r) / 5.0;
  float aveFi = (texColor0.g + texColor1.g + texColor2.g + texColor3.r + texColor4.g) / 5.0;

  float fl = texColor0.r;
  float fi = texColor0.g;

  fl = mix(fl, aveFl, 0.8);
  fi = mix(fi, aveFi, 0.02);

  //flow
  float flow = 0.21;
  fl = min(1.0, fl + min(flow, texIn.r) * length(bleedVec));
  fl = max(0.0, fl - flow  * length(bleedVec));

  // dry
  fl = max(0.0, fl - ((minFl == 0.0) ? 0.005   : 0.003));
  fi = max(0.0, fi - ((fl == 0.0) ? 0.001  : -fl * 0.002));

  gl_FragColor = vec4(fl, fi ,0.0, 1.0);
}
]]>
		</program>
	</language>
</jittershader>
