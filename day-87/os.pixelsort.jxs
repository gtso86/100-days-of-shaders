<jittershader name="pixelsort">
	<description>
	Pixel sorting
  https://www.shadertoy.com/view/XlGXzw
	</description>
  <param name="amount" type="float" default="0.99" />
  <param name="frame" type="float" default="0.0" />
	<param name="tex0" type="int" default="0" />
  <param name="tex1" type="int" default="1" />
	<language name="glsl" version="1.0">
    <bind param="amount" program="fp" />
    <bind param="frame" program="fp" />
		<bind param="tex0" program="fp" />
    <bind param="tex1" program="fp" />
		<program name="vp" type="vertex" source="sh.passthrudim.vp.glsl" />
		<program name="fp" type="fragment">
<![CDATA[

varying vec2 texcoord0;
varying vec2 texcoord1;
varying vec2 texdim0;
varying vec2 texdim1;

uniform sampler2DRect tex0;
uniform sampler2DRect tex1;
uniform float amount;
uniform float frame;

void main() {
  vec2 south = vec2(0.0, -1.0);
  vec2 north = vec2(0.0, 1.0);

  vec4 color = texture2DRect(tex0, texcoord0);
  vec4 northColor = texture2DRect(tex0, texcoord0 + north);
  vec4 southColor = texture2DRect(tex0, texcoord0 + south);

  // use luminance for sorting
  float northLuminance = dot(northColor, vec4(0.299, 0.587, 0.114, 0.));
  float luminance = dot(color, vec4(0.299, 0.587, 0.114, 0.));
  float southLuminance = dot(southColor, vec4(0.299, 0.587, 0.114, 0.));

  if (int(mod(frame + gl_FragCoord.y, 2.0)) == 0) {
    if ((southLuminance > luminance)) {
      color = southColor;
    }
  } else {
    if ((northLuminance < luminance)) {
      color = northColor;
    }
  }

  vec4 tex1Color = texture2DRect(tex1, texcoord1);

  if (frame < 1.0) {
    gl_FragColor = tex1Color;
  } else {
    gl_FragColor = (tex1Color + color * amount * 100.0) / 100.0;
  }
}
]]>
		</program>
	</language>
</jittershader>
